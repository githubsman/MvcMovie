@model MvcMovie.Models.MovieGenreViewModel
@* @model IEnumerable<MvcMovie.Models.Movie>  *@

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    @*  This form doesn't require [HttpPost] because the method in MoviesController
        is merely filtering data, and this doesn't change the state of the app.
        Adding //method="get"// to the form tag makes our search parameter
        available in the URL.  This enables a portable/storable bookmark of the search>result. 
    *@
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @*   .DisplayFor(modelItem => item.Title) ) This lambda evaluates.  
                        The code below inspects, which avoids complications due to null or empty.  *@
                @Html.DisplayNameFor(model => model.Movies![0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies!)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-route-id="@item.Id" asp-action="Edit">Edit</a> |
                <a asp-route-id="@item.Id" asp-action="Details">Details</a> |
                <a asp-route-id="@item.Id" asp-action="Delete">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
